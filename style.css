body {

	margin: 3%;
	background-color: white;
}

.plate {
    width: 1000px;
    height: 450px;
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    background: black;
    border-radius: 10000px;
    box-shadow: 0 35px 35px rgba(0, 0, 0, 0.75);
}

.plate::after {
    content: "";
    position: absolute;
    top: 30px;
    right: 30px;
    left: 30px;
    bottom: 30px;
    border-radius: 50%;
    background: green;
}

#scene {
	perspective: max(50vw, 50vh);
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	user-select: none;
	pointer-events: none;
	margin: auto;
	--diePad: 0.3;
	--minAxis: min(50vw, 50vh);
	--maxAxis: max(50vw, 50vh);
	--maxDieSpace: var(--minAxis);
	--idealDieSpace: calc(30vw + 30vh);
	--dieSpace: min(var(--maxDieSpace), var(--idealDieSpace));
	--dieEdge: calc(var(--dieSpace) / (1 + 2 * var(--diePad)));
	--pullToSurface: translateZ(calc(var(--dieEdge) / 2));
	--pushToFloor: translateZ(calc(-1 * var(--dieEdge) / 2));
}

#scene[data-dice-num="1"] { --idealDieSpace: max(50vw, 50vh); }
#scene[data-dice-num="2"] { --idealDieSpace: calc(var(--maxAxis) / 2); }
#scene[data-dice-num="3"] { --idealDieSpace: calc(var(--minAxis) / 2); }
#scene[data-dice-num="4"] { --idealDieSpace: calc(var(--minAxis) / 2); }
#scene[data-dice-num="5"] { --idealDieSpace: calc(var(--maxAxis) / 3); }
#scene[data-dice-num="6"] { --idealDieSpace: calc(var(--maxAxis) / 3); }

.diePad {
	padding: calc(var(--dieEdge) * var(--diePad));
	transform-style: preserve-3d;
	display: flex;
}

#scene[data-roll-count-mod5="0"] > :nth-child(6n+1) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+1) { --spin: rotateX(2turn) rotateY(1turn) rotateZ(-2turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+1) { --spin: rotateX(-1turn) rotateY(2turn) rotateZ(-3turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+1) { --spin: rotateX(-3turn) rotateY(1turn) rotateZ(-1turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+1) { --spin: rotateX(-1turn) rotateY(-1turn) rotateZ(-2turn); }
#scene[data-roll-count-mod5="0"] > :nth-child(6n+2) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+2) { --spin: rotateX(-2turn) rotateY(2turn) rotateZ(-1turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+2) { --spin: rotateX(0turn) rotateY(3turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+2) { --spin: rotateX(2turn) rotateY(2turn) rotateZ(1turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+2) { --spin: rotateX(-1turn) rotateY(1turn) rotateZ(2turn); }
#scene[data-roll-count-mod5="0"] > :nth-child(6n+3) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+3) { --spin: rotateX(3turn) rotateY(1turn) rotateZ(-1turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+3) { --spin: rotateX(0turn) rotateY(2turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+3) { --spin: rotateX(2turn) rotateY(3turn) rotateZ(-2turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+3) { --spin: rotateX(0turn) rotateY(1turn) rotateZ(-3turn); }
#scene[data-roll-count-mod5="0"] > :nth-child(6n+4) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+4) { --spin: rotateX(2turn) rotateY(-1turn) rotateZ(1turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+4) { --spin: rotateX(5turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+4) { --spin: rotateX(2turn) rotateY(-1turn) rotateZ(1turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+4) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(2turn); }
#scene[data-roll-count-mod5="0"] > :nth-child(6n+5) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+5) { --spin: rotateX(2turn) rotateY(1turn) rotateZ(-2turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+5) { --spin: rotateX(0turn) rotateY(3turn) rotateZ(-1turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+5) { --spin: rotateX(-2turn) rotateY(1turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+5) { --spin: rotateX(0turn) rotateY(2turn) rotateZ(2turn); }
#scene[data-roll-count-mod5="0"] > :nth-child(6n+6) { --spin: rotateX(0turn) rotateY(0turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="1"] > :nth-child(6n+6) { --spin: rotateX(-2turn) rotateY(2turn) rotateZ(1turn); }
#scene[data-roll-count-mod5="2"] > :nth-child(6n+6) { --spin: rotateX(1turn) rotateY(1turn) rotateZ(0turn); }
#scene[data-roll-count-mod5="3"] > :nth-child(6n+6) { --spin: rotateX(-1turn) rotateY(0turn) rotateZ(2turn); }
#scene[data-roll-count-mod5="4"] > :nth-child(6n+6) { --spin: rotateX(2turn) rotateY(1turn) rotateZ(1turn); }

.die {
	position: relative;
	width: var(--dieEdge);
	height: var(--dieEdge);
	transform: var(--pushToFloor);
	transform-style: preserve-3d;
	transition: transform 1s;
	pointer-events: auto;
}

.face {
	position: absolute;
	width: 100%;
	height: 100%;
	color: white;
	display: flex;
}

.face-1 { transform: rotateY(0turn) var(--pullToSurface); background-color: #800; }
.face-2 { transform: rotateY(0.25turn) var(--pullToSurface); background-color: #900; }
.face-3 { transform: rotateX(0.25turn) var(--pullToSurface); background-color: #a00; }
.face-4 { transform: rotateX(-0.25turn) var(--pullToSurface); background-color: #b00; }
.face-5 { transform: rotateY(-0.25turn) var(--pullToSurface); background-color: #c00; }
.face-6 { transform: rotateY(0.5turn) var(--pullToSurface); background-color: #d00; }

.die[data-result="1"] { transform: var(--pushToFloor) rotateY(0turn) var(--spin); }
.die[data-result="2"] { transform: var(--pushToFloor) rotateY(-0.25turn) var(--spin); }
.die[data-result="3"] { transform: var(--pushToFloor) rotateX(-0.25turn) var(--spin); }
.die[data-result="4"] { transform: var(--pushToFloor) rotateX(0.25turn) var(--spin); }
.die[data-result="5"] { transform: var(--pushToFloor) rotateY(0.25turn) var(--spin); }
.die[data-result="6"] { transform: var(--pushToFloor) rotateY(-0.5turn) var(--spin); }

#scene[data-number-style="dots"] .die span {
	display: none;
}
#scene[data-number-style="numbers"] .die svg {
	display: none;
}

circle {
	fill: white;
}
